@include test-module('Layout') {
    @include test('rdx-container [mixin]') {
        @include assert('Should output styles for a grid container') {
            @include input() {
                @include rdx-container();
            }

            @include expect() {
                position: relative;
                margin: 0 auto;
                padding: 0 5%;
                max-width: 990px;
            }
        }

        @include assert('Should output styles for a grid container without limiting width') {
            @include input() {
                @include rdx-container(false);
            }

            @include expect() {
                position: relative;
                margin: 0 auto;
                padding: 0 5%;
            }
        }
    }

    @include test('rdx-grid [mixin]') {
        @include assert('Should output base styles for a flexbox grid') {
            @include input() {
                @include rdx-grid();
            }

            @include expect() {
                display: flex;
            }
        }

        // Not current possible to test: see https://github.com/oddbird/true/issues/42
        //@include assert('Should output grid styles for auto-wrapping columns') {
        //    @include input() {
        //        @include rdx-grid($auto: true);
        //    }
        //
        //    @include expect() {
        //        display: flex;
        //        flex-wrap: wrap;
        //
        //        > * {
        //            flex: none;
        //        }
        //    }
        //}

        @include assert('Should output styles for centering columns horizontally') {
            @include input() {
                @include rdx-grid($center-x: true);
            }

            @include expect() {
                display: flex;
                justify-content: center;
            }
        }

        @include assert('Should output styles for centering columns vertically') {
            @include input() {
                @include rdx-grid($center-y: true);
            }

            @include expect() {
                display: flex;
                align-items: center;
            }
        }

        @include assert('Should output styles for reversing column order horizontally') {
            @include input() {
                @include rdx-grid($reverse: true);
            }

            @include expect() {
                display: flex;
                flex-direction: row-reverse;
            }
        }

        @include assert('Should output styles for reversing column order vertically') {
            @include input() {
                @include rdx-grid($reverse: true, $stack: true);
            }

            @include expect() {
                display: flex;
                flex-direction: column-reverse;
            }
        }

        @include assert('Should output styles for displaying columns vertically') {
            @include input() {
                @include rdx-grid($stack: true);
            }

            @include expect() {
                display: flex;
                flex-direction: column;
            }
        }
    }

    @include test('rdx-grid-cell [mixin]') {
        @include assert('Should output default properties for grid cell') {
            @include input() {
                @include rdx-grid-cell();
            }

            @include expect() {
                flex: 1;
                padding-right: 5px;
                padding-left: 5px;
            }
        }

        @include assert('Should output properties for grid cell without gutter') {
            @include input() {
                @include rdx-grid-cell($gutter: false);
            }

            @include expect() {
                flex: 1;
            }
        }

        @include assert('Should output properties for grid cell that does not flex') {
            @include input() {
                @include rdx-grid-cell($flex: false);
            }

            @include expect() {
                flex: none;
                padding-right: 5px;
                padding-left: 5px;
            }
        }
    }

    @include test('rdx-span [mixin]') {
        @include assert('Should output a width rule calculated by column numbers') {
            @include input() {
                @include rdx-span(2);
            }

            @include expect() {
                flex: none;
                width: 50%;
            }
        }
    }

    @include test('rdx-offset [mixin]') {
        @include assert('Should output a margin offset rule calculated by column numbers') {
            @include input() {
                @include rdx-offset(3);
            }

            @include expect() {
                margin-left: 75%;
            }
        }
    }
}
